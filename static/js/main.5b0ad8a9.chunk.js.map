{"version":3,"sources":["Intro.js","../../dist/index.es.js","demoData.js","Demo.js","Docs.js","App.js","index.js","logo.png"],"names":["Intro","react_default","a","createElement","className","src","logo","style","height","marginBottom","alt","href","index_es_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","sliceIterator","TypeError","toConsumableArray","arr2","from","index_es","initialList","_useState","react","_useState2","list","set$$1","set","empty","replace","item","l","concat","updateAt","index","updateFn","copy","slice","index_es_updateAt","setAt","removeAt","filter","filterFn","map","mapFn","sort","sortFn","reverse","mergeBefore","mergeAfter","defaultList","task","mergeBeforeList","mergeAfterList","Demo","_useArray","useArray","_useArray2","slicedToArray","_useArray2$","id","target","rel","onClick","Date","getTime","objectSpread","key","Docs","App","ReactDOM","render","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.5b0ad8a9.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.png';\n\nexport default () =>\n  <div className='card'>\n    <img src={logo} style={{ height: 96, marginBottom: 12 }} alt='' />\n    <img src='https://img.shields.io/npm/v/use-array.svg' alt='' />\n    <h1>use-array</h1>\n    <p>A custom React hook that lets you <mark>manipulate an array data structure</mark> without ever needing extra utilities. Start with:</p>\n    <p><code>npm install --save use-array</code></p>\n    <p>Then, import and use the hook:</p>\n    <pre>\n      {`import useArray from 'use-array'\\n`}\n      {`// …in your functional component: \\n`}\n      {`const [ list, {\\n`}\n      {`  set, empty, replace, push,\\n`}\n      {`  updateAt, setAt, removeAt,\\n`}\n      {`  filter, map, sort, reverse, \\n`}\n      {`  mergeBefore, mergeAfter, \\n`}\n      {`}] = useArray(defaultList);`}\n    </pre>\n    <p>Now, let’s go over each of the methods. You can also skip ahead <mark><a href='#docs'>to the docs</a></mark> or <mark><a href='#demo'>the demo.</a></mark></p>\n  </div>;\n","import { useState } from 'react';\n\nvar updateAt = function updateAt(index, updateFn, set) {\n  return set(function (l) {\n    var copy = l.slice(0);\n    var item = copy[index];\n    copy[index] = updateFn(item);\n    return copy;\n  });\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar toConsumableArray = function toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar useArray = function useArray(initialList) {\n  var _useState = useState(initialList),\n      _useState2 = slicedToArray(_useState, 2),\n      list = _useState2[0],\n      set$$1 = _useState2[1];\n\n  return [list, {\n    set: set$$1,\n    empty: function empty() {\n      return set$$1([]);\n    },\n    replace: function replace(list) {\n      return set$$1(list);\n    },\n    push: function push(item) {\n      return set$$1(function (l) {\n        return [].concat(toConsumableArray(l), [item]);\n      });\n    },\n    updateAt: function updateAt$$1(index, updateFn) {\n      return updateAt(index, updateFn, set$$1);\n    },\n    setAt: function setAt(index, value) {\n      return set$$1(function (l) {\n        return [].concat(toConsumableArray(l.slice(0, index)), [value], toConsumableArray(l.slice(index + 1)));\n      });\n    },\n    removeAt: function removeAt(index) {\n      return set$$1(function (l) {\n        return [].concat(toConsumableArray(l.slice(0, index)), toConsumableArray(l.slice(index + 1)));\n      });\n    },\n    filter: function filter(filterFn) {\n      return set$$1(function (l) {\n        return l.filter(filterFn);\n      });\n    },\n    map: function map(mapFn) {\n      return set$$1(function (l) {\n        return [].concat(toConsumableArray(l)).map(mapFn);\n      });\n    },\n    sort: function sort(sortFn) {\n      return set$$1(function (l) {\n        return [].concat(toConsumableArray(l)).sort(sortFn);\n      });\n    },\n    reverse: function reverse() {\n      return set$$1(function (l) {\n        return [].concat(toConsumableArray(l)).reverse();\n      });\n    },\n    mergeBefore: function mergeBefore(arr) {\n      return set$$1(function (l) {\n        return [].concat(toConsumableArray(arr)).concat([].concat(toConsumableArray(l)));\n      });\n    },\n    mergeAfter: function mergeAfter(arr) {\n      return set$$1(function (l) {\n        return [].concat(toConsumableArray(l)).concat([].concat(toConsumableArray(arr)));\n      });\n    }\n  }];\n};\n\nexport default useArray;","import React from 'react'\n\nexport const defaultList = [\n  { task: <span>Check the <mark>use-array</mark> demo</span>, done: true },\n  { task: <span>Install with <code>npm install --save use-array</code> and then import as <code>{`import useArray from 'use-array'`}</code></span>, done: false },\n  { task: 'Follow the example and docs! 🎉 🎉 🎉', done: false },\n];\n\nexport const getTask = () => ({\n  done: false,\n  task: 'Your new task. Timestamp: ' + new Date().getTime()\n});\n\nexport const mergeBeforeList = [\n  { task: <span>Added with <code>mergeBefore</code></span>, done: false },\n];\n\nexport const mergeAfterList = [\n  { task: <span>Added with <code>mergeAfter</code></span>, done: false },\n];\n","import React from 'react';\nimport useArray from 'use-array';\nimport { defaultList, getTask, mergeBeforeList, mergeAfterList } from './demoData';\n\nexport default () => {\n  const [\n    list,\n    { empty, push, updateAt, filter, removeAt, map, reverse, mergeBefore, mergeAfter }\n  ] = useArray(defaultList);\n\n  return (\n    <div id='demo'>\n      <div className='buttons'>\n        <h2>Demo</h2>\n        <p>\n          All of the code is{' '}\n          <a\n            href='https://github.com/filipdanic/use-array/blob/master/example/src/Demo.js'\n            target='_blank'\n            rel='noopener noreferrer'\n          >available on Github.\n          </a>\n        </p>\n        <button onClick={() => filter(item => !item.done)}>\n          Remove completed\n        </button>\n        <button onClick={empty}>\n          Remove all\n        </button>\n        <button onClick={() => push(getTask())}>\n          Add task\n        </button>\n        <button onClick={() => map(item => ({...item, done: !item.done}))}>\n          Toggle “done”\n        </button>\n        <button onClick={reverse}>\n          Reverse\n        </button>\n        <button onClick={() => mergeBefore(mergeBeforeList)}>\n          Merge before\n        </button>\n        <button onClick={() => mergeAfter(mergeAfterList)}>\n          Merge after\n        </button>\n      </div>\n      {list.map((item, index) =>\n        <div\n          key={index}\n          className={'card ' + (item.done ? 'card--done' : '')}\n        >\n          <p>{item.task}</p>\n          <button\n            onClick={() => updateAt(index, item => ({...item, done: !item.done}))}\n          >\n            {item.done ? '↩️ Undo' : '✅ Done'}\n          </button>\n          <button\n            onClick={() => removeAt(index)}\n          >\n            ❌ Delete\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default () =>\n  <div id='docs'>\n    <div className='buttons'>\n      <h2>Method Docs</h2>\n    </div>\n    <div className='card'>\n      <h3>empty</h3>\n      <p><code>empty</code> will reset the state to an <mark>empty array.</mark></p>\n      <pre>{`empty()`}</pre>\n      <h3>replace / set</h3>\n      <p><code>replace</code> and <code>set</code> are the same, they are called with one parameter: the <mark>new array</mark> for the state.</p>\n      <pre>\n        {`replace(newList) \\n`}\n        {`// or: \\n`}\n        {`set(newList)`}\n      </pre>\n      <h3>push</h3>\n      <p><code>push</code> should be familiar – provide an <mark>item</mark> as the argument and it will be pushed to the state.</p>\n      <pre>{`push(item)`}</pre>\n      <h3>updateAt</h3>\n      <p><code>updateAt</code> takes two parameters: <mark>the index</mark> and an <mark>update function</mark> which will be called with the item at the given index.</p>\n      <pre>\n        {`updateAt(index, (item) =>\\n`}\n        {`  ({ ...item, done: true }));`}\n      </pre>\n      <h3>setAt</h3>\n      <p><code>setAt</code> takes two parameters: <mark>the index</mark> and an <mark>item</mark> which will be placed at the given index.</p>\n      <pre>\n        {`setAt(index, item)`}\n      </pre>\n      <h3>removeAt</h3>\n      <p><code>removeAt</code> takes <mark>the index</mark> of the item that should be removed as a parameter.</p>\n      <pre>\n        {`removeAt(index)`}\n      </pre>\n      <h3>filter</h3>\n      <p><code>filter</code> takes a <mark>filter function (predicate)</mark> as the parameter, just like <code>{`Array​.prototype​.filter()`}</code></p>\n      <pre>\n        {`filter((item) => item.done === false)`}\n      </pre>\n      <h3>map</h3>\n      <p><code>map</code> takes a <mark>map function</mark> as the parameter, just like <code>{`Array​.prototype​.map()`}</code></p>\n      <pre>\n        {`map((item) => \\n`}\n        {`  ({ ...item, updatedAt: new Date().getTime() })\\n`}\n        {`)`}\n      </pre>\n      <h3>sort</h3>\n      <p><code>sort</code> takes an <mark>optional sort function</mark> as the parameter, just like <code>{`Array​.prototype​.sort()`}</code></p>\n      <pre>\n        {`sort((a, b) => a.localeCompare(b))`}\n      </pre>\n      <h3>reverse</h3>\n      <p><code>reverse</code> works just like <code>{`Array​.prototype​.reverse()`}</code></p>\n      <pre>\n        {`reverse()`}\n      </pre>\n    </div>\n  </div>;\n","import React from 'react';\nimport Intro from './Intro';\nimport Demo from './Demo';\nimport Docs from './Docs';\n\nconst App = () =>\n  <div>\n    <Intro />\n    <Demo />\n    <Docs />\n  </div>;\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","module.exports = __webpack_public_path__ + \"static/media/logo.74487bb9.png\";"],"sourceRoot":""}